// Copyright (C) Jessie Grosen 2024
// SPDX-License-Identifier: MIT

import { HorizontalBox, ScrollView , GridBox, VerticalBox} from "std-widgets.slint";

import { Ingredient, IngredientProgress, Recipe } from "recipe.slint";
import { Palette } from "styling.slint";
import { StrikethroughText } from "strikethrough.slint";
import { ScaleControls, ScaleStatus, ScaleStatusUtils } from "scale.slint";

enum SelectionType {
    weight,
    recipe,
}

// if only we had algebraic data types
// also can't name this just "Selection" due to some Slint compiler bug involving an enum having the same name in a different file, it seems...
struct RLSelection {
    type: SelectionType,
    subidx: int,
}

global RLSelection {
    public pure function next(num-recipes: int, sel: RLSelection) -> RLSelection {
        if (num-recipes == 0) {
            {type: SelectionType.weight, subidx: 0}
        } else if (sel.type == SelectionType.weight) {
            {type: SelectionType.recipe, subidx: 0}
        } else if (sel.subidx == num-recipes - 1) {
            sel
        } else {
            {type: SelectionType.recipe, subidx: sel.subidx + 1}
        }
    }

    public pure function prev(num-recipes: int, sel: RLSelection) -> RLSelection {
        if (sel.type == SelectionType.weight) {
            sel
        } else if (sel.subidx == 0) {
            {type: SelectionType.weight, subidx: 0}
        } else {
            {type: SelectionType.recipe, subidx: sel.subidx - 1}
        }
    }

    public pure function is-recipe-selected(sel: RLSelection, recipe-idx: int) -> bool {
        sel.type == SelectionType.recipe && sel.subidx == recipe-idx
    }
}

export component RecipeList inherits ScrollView {
    in property<ScaleStatus> current-weight;
    in property<[Recipe]> recipes;
    out property<int> selected-recipe: selection.subidx;
    callback recipe-focused();

    property<length> item-height : 56px;
    property<RLSelection> selection: {type: SelectionType.weight, subidx: 0};

    width: 536px;
    height: 240px;
    // TODO: pull out this logic somewhere else somehow?
    viewport-y:
      selection.type == SelectionType.weight
      ? self.height / 2 - weight-text.height / 2
      // ? 0
      : -weight-text.height - recipes-text.height - selected-recipe * item-height + (self.height - item-height) / 2;
    // viewport-y: -recipes-text.height - selected-recipe * item-height + (self.height - item-height) / 2;
    animate viewport-y { duration: 250ms; easing: ease-in-out; }
    vertical-scrollbar-policy: always-off;

    forward-focus: focus-scope;
    focus-scope := FocusScope {
        key-released(event) => {
            if (event.text == Key.UpArrow) {
                selection = RLSelection.prev(recipes.length, selection);
            } else if (event.text == Key.DownArrow) {
                selection = RLSelection.next(recipes.length, selection);
            } else if (event.text == Key.RightArrow) {
                recipe-focused();
            }
            accept
        }

        key-pressed(event) => {
            // TODO: move this logic out...
            if (selection.type == SelectionType.weight && event.text == "d") {
                ScaleControls.zero();
            }
            accept
        }
    }

    VerticalLayout {
        width: parent.width;

        weight-text := Rectangle {
            background: selection.type == SelectionType.weight ? Palette.primary : black;
            Text {
                text: ScaleStatusUtils.to-text(current-weight);
                width: parent.width;
                horizontal-alignment: right;
                vertical-alignment: center;
                font-size: 128px;
                font-weight: 800;
                font-family: "Fira Mono";
                color: white;
            }
        }

        recipes-text := VerticalBox {
            width: parent.width;
            padding-bottom: 0;
            Text {
                color: white;
                text: "Recipes";
                font-size: 60px;
                font-weight: 700;
            }
        }

        for recipe[idx] in recipes : Rectangle {
            width: parent.width;
            height: item-height;
            background: RLSelection.is-recipe-selected(selection, idx) ? Palette.primary : black;

            HorizontalBox {
                width: parent.width;
                height: 64px;
                padding-top: 8px;
                padding-bottom: 0;
                alignment: start;

                Text {
                    color: white;
                    text: recipe.name;
                    font-size: 40px;
                }
            }
        }
    }
}